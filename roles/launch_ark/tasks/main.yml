---
- include_vars:
    file: "{{ playbook_dir }}/config/defaults.yml"

- include_vars:
    file: "{{ playbook_dir }}/config/velero_aws_creds.yml"
  when: veleroProvider == "aws"

- name: Apply ark common prereqs
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('file', '{{ playbook_dir }}/ark/config/common/00-prereqs.yaml')}}"
- name: Create minio deployment
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('file', '{{ playbook_dir }}/ark/config/minio/00-minio-deployment.yaml')}}"
  when: veleroProvider == "minio"

- name: Create minio route
  k8s:
    state: "{{ state }}"
    definition:
      kind: Route
      apiVersion: route.openshift.io/v1
      metadata:
        name: minio
        namespace: heptio-ark
        labels:
          component: minio
          service: minio
      spec:
        to:
          kind: Service
          name: minio
        port:
          targetPort: 9000
  when: veleroProvider == "minio"
  register: minio_route_res

- name: Create minio backupstoragelocationn for ark
  vars:
    minio_route: "{{ minio_route_res | json_query('result.spec.host') | default('foo.example.com') }}"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', '05-ark-minio-backupstoragelocation.yaml.j2') | from_yaml }}"
  ignore_errors: yes
  when: veleroProvider == "minio"

- name: Create aws backupstoragelocation for ark
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', '05-ark-aws-backupstoragelocation.yaml.j2') | from_yaml }}"
  when: veleroProvider == "aws"

- name: Create aws volumesnapshotlocation for ark
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', '06-ark-aws-volumesnapshotlocation.yaml.j2') | from_yaml }}"
  when: veleroProvider == "aws"

- name: Create aws bucket cloud creds
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cloud-credentials
        namespace: heptio-ark
      data:
        cloud: "{{ lookup('template', 'cloud-credentials.j2') | b64encode }}"
  when: veleroProvider == "aws"

- name: Create ark deployment
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('file', '{{ playbook_dir }}/ark/config/minio/20-ark-deployment.yaml')}}"
- name: Create restic daemonset
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('file', '{{ playbook_dir }}/ark/config/minio/30-restic-daemonset.yaml')}}"

